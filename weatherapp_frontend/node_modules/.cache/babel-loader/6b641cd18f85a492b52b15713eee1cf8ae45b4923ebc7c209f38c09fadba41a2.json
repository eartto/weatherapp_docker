{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport weatherService from '../services/weatherService';\nconst initialState = {\n  weatherReport: null\n};\nexport const fetchWeatherReport = createAsyncThunk('cities/fetchCities', async city => {\n  const response = await weatherService.getCity(city);\n  console.log(response.data);\n  return response === null || response === void 0 ? void 0 : response.data;\n});\nconst weatherReportSlice = createSlice({\n  name: 'weatherReport',\n  initialState,\n  reducers: {\n    setWeather: (state, action) => {\n      const weatherReport = action.payload;\n      state.weatherReport = weatherReport;\n      return state;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchWeatherReport.fulfilled, (state, action) => {\n      state.weatherReport = action.payload;\n    });\n  }\n});\nexport const {\n  setWeather\n} = weatherReportSlice.actions;\nconst weatherReportReducer = weatherReportSlice.reducer;\nexport default weatherReportReducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","weatherService","initialState","weatherReport","fetchWeatherReport","city","response","getCity","console","log","data","weatherReportSlice","name","reducers","setWeather","state","action","payload","extraReducers","builder","addCase","fulfilled","actions","weatherReportReducer","reducer"],"sources":["/home/eartto/weatherapp/weatherapp_frontend/src/reducers/weatherReportReducer.ts"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport weatherService from '../services/weatherService'\nimport { State } from '../@types/weatherReport'\n\nconst initialState: State = {\n    weatherReport: null\n}\n\nexport const fetchWeatherReport = createAsyncThunk(\n    'cities/fetchCities',\n    async (city: string) => {\n        const response = await weatherService.getCity(city)\n        console.log(response.data)\n        return response?.data\n    })\n\nconst weatherReportSlice = createSlice({\n    name: 'weatherReport',\n    initialState,\n    reducers: {\n        setWeather: (state, action) => {\n            const weatherReport = action.payload\n            state.weatherReport = weatherReport\n            return state\n        }\n    },\n    extraReducers: (builder) => {\n        builder.addCase(fetchWeatherReport.fulfilled, (state, action) => {\n            state.weatherReport = action.payload\n        })\n    }\n})\n\nexport const { setWeather } = weatherReportSlice.actions\n\nconst weatherReportReducer = weatherReportSlice.reducer\n\nexport default weatherReportReducer"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,cAAc,MAAM,4BAA4B;AAGvD,MAAMC,YAAmB,GAAG;EACxBC,aAAa,EAAE;AACnB,CAAC;AAED,OAAO,MAAMC,kBAAkB,GAAGL,gBAAgB,CAC9C,oBAAoB,EACpB,MAAOM,IAAY,IAAK;EACpB,MAAMC,QAAQ,GAAG,MAAML,cAAc,CAACM,OAAO,CAACF,IAAI,CAAC;EACnDG,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;EAC1B,OAAOJ,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEI,IAAI;AACzB,CAAC,CAAC;AAEN,MAAMC,kBAAkB,GAAGX,WAAW,CAAC;EACnCY,IAAI,EAAE,eAAe;EACrBV,YAAY;EACZW,QAAQ,EAAE;IACNC,UAAU,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC3B,MAAMb,aAAa,GAAGa,MAAM,CAACC,OAAO;MACpCF,KAAK,CAACZ,aAAa,GAAGA,aAAa;MACnC,OAAOY,KAAK;IAChB;EACJ,CAAC;EACDG,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CAACC,OAAO,CAAChB,kBAAkB,CAACiB,SAAS,EAAE,CAACN,KAAK,EAAEC,MAAM,KAAK;MAC7DD,KAAK,CAACZ,aAAa,GAAGa,MAAM,CAACC,OAAO;IACxC,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH;AAAW,CAAC,GAAGH,kBAAkB,CAACW,OAAO;AAExD,MAAMC,oBAAoB,GAAGZ,kBAAkB,CAACa,OAAO;AAEvD,eAAeD,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}