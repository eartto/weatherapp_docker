{"ast":null,"code":"var _jsxFileName = \"/home/eartto/weatherapp/weatherapp_frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport './App.css';\nimport { useAppDispatch, useTypedSelector } from './store/index';\nimport { fetchWeatherReport } from './reducers/weatherReportReducer';\nimport WeatherDisplay from './components/WeatherDisplay';\nimport { showWeather } from './reducers/hideWeatherReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const dispatch = useAppDispatch();\n  const hideWeather = useTypedSelector(state => state.hideWeather);\n  useEffect(() => {\n    dispatch(fetchWeatherReport('helsinki'));\n    dispatch(showWeather());\n    console.log(hideWeather);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(WeatherDisplay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"HPGYr0/aMXbrKAYeIO7e3qOorKE=\", false, function () {\n  return [useAppDispatch, useTypedSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useAppDispatch","useTypedSelector","fetchWeatherReport","WeatherDisplay","showWeather","jsxDEV","_jsxDEV","App","_s","dispatch","hideWeather","state","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/eartto/weatherapp/weatherapp_frontend/src/App.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport './App.css';\nimport { useAppDispatch, useTypedSelector } from './store/index';\nimport { fetchWeatherReport } from './reducers/weatherReportReducer';\nimport WeatherDisplay from './components/WeatherDisplay';\nimport { showWeather } from './reducers/hideWeatherReducer';\n\nconst App: React.FC = () => {\n  const dispatch = useAppDispatch()\n  const hideWeather = useTypedSelector((state) => state.hideWeather)\n\n\n  useEffect(() => {\n    dispatch(fetchWeatherReport('helsinki'))\n    dispatch(showWeather())\n    console.log(hideWeather)\n  },[])\n\n  return (\n    <div>\n      <WeatherDisplay />\n    </div>\n  )\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,WAAW;AAClB,SAASC,cAAc,EAAEC,gBAAgB,QAAQ,eAAe;AAChE,SAASC,kBAAkB,QAAQ,iCAAiC;AACpE,OAAOC,cAAc,MAAM,6BAA6B;AACxD,SAASC,WAAW,QAAQ,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,QAAQ,GAAGT,cAAc,CAAC,CAAC;EACjC,MAAMU,WAAW,GAAGT,gBAAgB,CAAEU,KAAK,IAAKA,KAAK,CAACD,WAAW,CAAC;EAGlEX,SAAS,CAAC,MAAM;IACdU,QAAQ,CAACP,kBAAkB,CAAC,UAAU,CAAC,CAAC;IACxCO,QAAQ,CAACL,WAAW,CAAC,CAAC,CAAC;IACvBQ,OAAO,CAACC,GAAG,CAACH,WAAW,CAAC;EAC1B,CAAC,EAAC,EAAE,CAAC;EAEL,oBACEJ,OAAA;IAAAQ,QAAA,eACER,OAAA,CAACH,cAAc;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEV,CAAC;AAAAV,EAAA,CAhBKD,GAAa;EAAA,QACAP,cAAc,EACXC,gBAAgB;AAAA;AAAAkB,EAAA,GAFhCZ,GAAa;AAkBnB,eAAeA,GAAG;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}