{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport weatherService from '../services/weatherService';\nimport { addWeatherHistory } from './weatherHistoryReducer';\nconst initialState = {\n  name: null,\n  weather: null,\n  main: null,\n  wind: null\n};\nconst weatherReportSlice = createSlice({\n  name: 'weatherReport',\n  initialState,\n  reducers: {\n    setWeather: (state, action) => {\n      const weatherReport = action.payload;\n      state = weatherReport;\n      return state;\n    }\n  }\n});\nexport const fetchWeatherReport = city => {\n  return async dispatch => {\n    const weatherReport = await weatherService.getCity(city);\n    dispatch(setWeather(weatherReport));\n    if (weatherReport.name) {\n      dispatch(addWeatherHistory(weatherReport.name));\n    }\n  };\n};\nexport const {\n  setWeather\n} = weatherReportSlice.actions;\nconst weatherReportReducer = weatherReportSlice.reducer;\nexport default weatherReportReducer;","map":{"version":3,"names":["createSlice","weatherService","addWeatherHistory","initialState","name","weather","main","wind","weatherReportSlice","reducers","setWeather","state","action","weatherReport","payload","fetchWeatherReport","city","dispatch","getCity","actions","weatherReportReducer","reducer"],"sources":["/home/eartto/weatherapp/weatherapp_frontend/src/reducers/weatherReportReducer.ts"],"sourcesContent":["import { createSlice, Dispatch } from '@reduxjs/toolkit'\nimport weatherService from '../services/weatherService'\nimport { weatherReport } from '../@types/weatherReport'\nimport { addWeatherHistory } from './weatherHistoryReducer'\n\nconst initialState: weatherReport = {\n    name: null,\n    weather: null,\n    main: null,\n    wind: null\n}\n\nconst weatherReportSlice = createSlice({\n    name: 'weatherReport',\n    initialState,\n    reducers: {\n        setWeather: (state, action) => {\n            const weatherReport = action.payload\n            state = weatherReport\n            return state\n        }\n    }\n})\n\nexport const fetchWeatherReport = (city: string) => {\n    return async (dispatch: Dispatch) => {\n        const weatherReport = await weatherService.getCity(city)\n        dispatch(setWeather(weatherReport))\n        if (weatherReport.name) {\n            dispatch(addWeatherHistory(weatherReport.name))\n        }\n    }\n}\n\nexport const { setWeather } = weatherReportSlice.actions\n\nconst weatherReportReducer = weatherReportSlice.reducer\n\nexport default weatherReportReducer"],"mappings":"AAAA,SAASA,WAAW,QAAkB,kBAAkB;AACxD,OAAOC,cAAc,MAAM,4BAA4B;AAEvD,SAASC,iBAAiB,QAAQ,yBAAyB;AAE3D,MAAMC,YAA2B,GAAG;EAChCC,IAAI,EAAE,IAAI;EACVC,OAAO,EAAE,IAAI;EACbC,IAAI,EAAE,IAAI;EACVC,IAAI,EAAE;AACV,CAAC;AAED,MAAMC,kBAAkB,GAAGR,WAAW,CAAC;EACnCI,IAAI,EAAE,eAAe;EACrBD,YAAY;EACZM,QAAQ,EAAE;IACNC,UAAU,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC3B,MAAMC,aAAa,GAAGD,MAAM,CAACE,OAAO;MACpCH,KAAK,GAAGE,aAAa;MACrB,OAAOF,KAAK;IAChB;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMI,kBAAkB,GAAIC,IAAY,IAAK;EAChD,OAAO,MAAOC,QAAkB,IAAK;IACjC,MAAMJ,aAAa,GAAG,MAAMZ,cAAc,CAACiB,OAAO,CAACF,IAAI,CAAC;IACxDC,QAAQ,CAACP,UAAU,CAACG,aAAa,CAAC,CAAC;IACnC,IAAIA,aAAa,CAACT,IAAI,EAAE;MACpBa,QAAQ,CAACf,iBAAiB,CAACW,aAAa,CAACT,IAAI,CAAC,CAAC;IACnD;EACJ,CAAC;AACL,CAAC;AAED,OAAO,MAAM;EAAEM;AAAW,CAAC,GAAGF,kBAAkB,CAACW,OAAO;AAExD,MAAMC,oBAAoB,GAAGZ,kBAAkB,CAACa,OAAO;AAEvD,eAAeD,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}