{"ast":null,"code":"var _s = $RefreshSig$();\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport weatherReportReducer from \"../reducers/weatherReportReducer\";\nimport hideWeatherReducer from \"../reducers/hideWeatherReducer\";\nconst store = configureStore({\n  reducer: {\n    WeatherReport: weatherReportReducer,\n    hideWeather: hideWeatherReducer\n  }\n});\nexport const useAppDispatch = () => {\n  _s();\n  return useDispatch();\n};\n_s(useAppDispatch, \"jI3HA1r1Cumjdbu14H7G+TUj798=\", false, function () {\n  return [useDispatch];\n});\nexport const useTypedSelector = useSelector;\nexport default store;","map":{"version":3,"names":["configureStore","useDispatch","useSelector","weatherReportReducer","hideWeatherReducer","store","reducer","WeatherReport","hideWeather","useAppDispatch","_s","useTypedSelector"],"sources":["/home/eartto/weatherapp/weatherapp_frontend/src/store/index.ts"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\nimport { useDispatch, useSelector, TypedUseSelectorHook } from \"react-redux\";\nimport weatherReportReducer from \"../reducers/weatherReportReducer\";\nimport hideWeatherReducer from \"../reducers/hideWeatherReducer\";\n\nconst store = configureStore({\n    reducer: {\n        WeatherReport: weatherReportReducer,\n        hideWeather: hideWeatherReducer\n    }\n})\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector\n\nexport default store"],"mappings":";AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,WAAW,EAAEC,WAAW,QAA8B,aAAa;AAC5E,OAAOC,oBAAoB,MAAM,kCAAkC;AACnE,OAAOC,kBAAkB,MAAM,gCAAgC;AAE/D,MAAMC,KAAK,GAAGL,cAAc,CAAC;EACzBM,OAAO,EAAE;IACLC,aAAa,EAAEJ,oBAAoB;IACnCK,WAAW,EAAEJ;EACjB;AACJ,CAAC,CAAC;AAKF,OAAO,MAAMK,cAAc,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMT,WAAW,CAAc,CAAC;AAAA;AAAAS,EAAA,CAAjDD,cAAc;EAAA,QAASR,WAAW;AAAA;AAC/C,OAAO,MAAMU,gBAAiD,GAAGT,WAAW;AAE5E,eAAeG,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}