{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport weatherService from '../services/weatherService';\nconst initialState = {\n  weatherReport: null,\n  isLoading: false,\n  error: null\n};\nconst weatherReportSlice = createSlice({\n  name: 'weatherReport',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchWeatherReport.pending, state => {\n      state.isLoading = true;\n    });\n    builder.addCase(fetchWeatherReport.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.weatherReport = action.payload;\n    });\n    builder.addCase(fetchWeatherReport.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.error.message;\n    });\n  }\n});\nexport const fetchWeatherReport = createAsyncThunk('weatherReport/fetchWeatherReport', async city => {\n  const response = await weatherService.getCity(city);\n  return response;\n});\nconst weatherReportReducer = weatherReportSlice.reducer;\nexport default weatherReportReducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","weatherService","initialState","weatherReport","isLoading","error","weatherReportSlice","name","reducers","extraReducers","builder","addCase","fetchWeatherReport","pending","state","fulfilled","action","payload","rejected","message","city","response","getCity","weatherReportReducer","reducer"],"sources":["/home/eartto/weatherapp/weatherapp_frontend/src/reducers/weatherReportReducer.ts"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport weatherService from '../services/weatherService'\nimport { WeatherReport } from '../@types/weatherReport'\n\ninterface weatherReportState {\n    weatherReport: WeatherReport | null;\n    isLoading: boolean;\n    error?: string | null;\n}\n\nconst initialState: weatherReportState = {\n    weatherReport: null,\n    isLoading: false,\n    error: null\n}\n\nconst weatherReportSlice = createSlice({\n    name: 'weatherReport',\n    initialState,\n    reducers: {},\n    extraReducers: (builder) => {\n        builder.addCase(fetchWeatherReport.pending, (state) => {\n            state.isLoading = true\n        })\n        builder.addCase(fetchWeatherReport.fulfilled, (state, action) => {\n            state.isLoading = false\n            state.weatherReport = action.payload\n        })\n        builder.addCase(fetchWeatherReport.rejected, (state, action) => {\n            state.isLoading = false\n            state.error = action.error.message\n        })\n    }\n})\n\nexport const fetchWeatherReport = createAsyncThunk(\n    'weatherReport/fetchWeatherReport',\n    async (city: string) => {\n        const response = await weatherService.getCity(city)\n        return response\n    }\n)\n\nconst weatherReportReducer = weatherReportSlice.reducer\n\nexport default weatherReportReducer"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,cAAc,MAAM,4BAA4B;AASvD,MAAMC,YAAgC,GAAG;EACrCC,aAAa,EAAE,IAAI;EACnBC,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE;AACX,CAAC;AAED,MAAMC,kBAAkB,GAAGN,WAAW,CAAC;EACnCO,IAAI,EAAE,eAAe;EACrBL,YAAY;EACZM,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CAACC,OAAO,CAACC,kBAAkB,CAACC,OAAO,EAAGC,KAAK,IAAK;MACnDA,KAAK,CAACV,SAAS,GAAG,IAAI;IAC1B,CAAC,CAAC;IACFM,OAAO,CAACC,OAAO,CAACC,kBAAkB,CAACG,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC7DF,KAAK,CAACV,SAAS,GAAG,KAAK;MACvBU,KAAK,CAACX,aAAa,GAAGa,MAAM,CAACC,OAAO;IACxC,CAAC,CAAC;IACFP,OAAO,CAACC,OAAO,CAACC,kBAAkB,CAACM,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAC5DF,KAAK,CAACV,SAAS,GAAG,KAAK;MACvBU,KAAK,CAACT,KAAK,GAAGW,MAAM,CAACX,KAAK,CAACc,OAAO;IACtC,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMP,kBAAkB,GAAGb,gBAAgB,CAC9C,kCAAkC,EAClC,MAAOqB,IAAY,IAAK;EACpB,MAAMC,QAAQ,GAAG,MAAMpB,cAAc,CAACqB,OAAO,CAACF,IAAI,CAAC;EACnD,OAAOC,QAAQ;AACnB,CACJ,CAAC;AAED,MAAME,oBAAoB,GAAGjB,kBAAkB,CAACkB,OAAO;AAEvD,eAAeD,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}