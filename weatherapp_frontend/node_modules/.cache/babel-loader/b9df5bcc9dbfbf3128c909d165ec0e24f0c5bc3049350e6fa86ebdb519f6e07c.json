{"ast":null,"code":"import{createAsyncThunk,createSlice}from'@reduxjs/toolkit';import weatherService from'../services/weatherService';const initialState={weatherReport:null,loading:'idle',error:null};const weatherReportSlice=createSlice({name:'weatherReport',initialState,reducers:{setWeather:(state,action)=>{const weatherReport=action.payload;state.weatherReport=weatherReport;return state;}},extraReducers:builder=>{builder.addCase(fetchWeatherReport.pending,state=>{state.loading='pending';});builder.addCase(fetchWeatherReport.fulfilled,(state,action)=>{state.loading='succeeded';state.weatherReport=action.payload;});builder.addCase(fetchWeatherReport.rejected,(state,action)=>{state.loading='failed';state.error=action.error.message;});}});export const fetchWeatherReport=createAsyncThunk('weatherReport/fetchWeatherReport',async city=>{const response=await weatherService.getCity(city);return response;});export const{setWeather}=weatherReportSlice.actions;const weatherReportReducer=weatherReportSlice.reducer;export default weatherReportReducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","weatherService","initialState","weatherReport","loading","error","weatherReportSlice","name","reducers","setWeather","state","action","payload","extraReducers","builder","addCase","fetchWeatherReport","pending","fulfilled","rejected","message","city","response","getCity","actions","weatherReportReducer","reducer"],"sources":["/home/eartto/weatherapp/weatherapp_frontend/src/reducers/weatherReportReducer.ts"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport weatherService from '../services/weatherService';\nimport { WeatherReportState } from '../@types/weatherReport';\n\nconst initialState: WeatherReportState = {\n  weatherReport: null,\n  loading: 'idle',\n  error: null,\n};\n\nconst weatherReportSlice = createSlice({\n  name: 'weatherReport',\n  initialState,\n  reducers: {\n    setWeather: (state, action) => {\n      const weatherReport = action.payload;\n      state.weatherReport = weatherReport;\n      return state;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchWeatherReport.pending, (state) => {\n      state.loading = 'pending';\n    });\n    builder.addCase(fetchWeatherReport.fulfilled, (state, action) => {\n      state.loading = 'succeeded';\n      state.weatherReport = action.payload;\n    });\n    builder.addCase(fetchWeatherReport.rejected, (state, action) => {\n      state.loading = 'failed';\n      state.error = action.error.message;\n    });\n  },\n});\n\nexport const fetchWeatherReport = createAsyncThunk(\n  'weatherReport/fetchWeatherReport',\n  async (city: string) => {\n    const response = await weatherService.getCity(city);\n    return response;\n  }\n);\n\nexport const { setWeather } = weatherReportSlice.actions;\n\nconst weatherReportReducer = weatherReportSlice.reducer;\n\nexport default weatherReportReducer;\n"],"mappings":"AAAA,OAASA,gBAAgB,CAAEC,WAAW,KAAQ,kBAAkB,CAChE,MAAO,CAAAC,cAAc,KAAM,4BAA4B,CAGvD,KAAM,CAAAC,YAAgC,CAAG,CACvCC,aAAa,CAAE,IAAI,CACnBC,OAAO,CAAE,MAAM,CACfC,KAAK,CAAE,IACT,CAAC,CAED,KAAM,CAAAC,kBAAkB,CAAGN,WAAW,CAAC,CACrCO,IAAI,CAAE,eAAe,CACrBL,YAAY,CACZM,QAAQ,CAAE,CACRC,UAAU,CAAEA,CAACC,KAAK,CAAEC,MAAM,GAAK,CAC7B,KAAM,CAAAR,aAAa,CAAGQ,MAAM,CAACC,OAAO,CACpCF,KAAK,CAACP,aAAa,CAAGA,aAAa,CACnC,MAAO,CAAAO,KAAK,CACd,CACF,CAAC,CACDG,aAAa,CAAGC,OAAO,EAAK,CAC1BA,OAAO,CAACC,OAAO,CAACC,kBAAkB,CAACC,OAAO,CAAGP,KAAK,EAAK,CACrDA,KAAK,CAACN,OAAO,CAAG,SAAS,CAC3B,CAAC,CAAC,CACFU,OAAO,CAACC,OAAO,CAACC,kBAAkB,CAACE,SAAS,CAAE,CAACR,KAAK,CAAEC,MAAM,GAAK,CAC/DD,KAAK,CAACN,OAAO,CAAG,WAAW,CAC3BM,KAAK,CAACP,aAAa,CAAGQ,MAAM,CAACC,OAAO,CACtC,CAAC,CAAC,CACFE,OAAO,CAACC,OAAO,CAACC,kBAAkB,CAACG,QAAQ,CAAE,CAACT,KAAK,CAAEC,MAAM,GAAK,CAC9DD,KAAK,CAACN,OAAO,CAAG,QAAQ,CACxBM,KAAK,CAACL,KAAK,CAAGM,MAAM,CAACN,KAAK,CAACe,OAAO,CACpC,CAAC,CAAC,CACJ,CACF,CAAC,CAAC,CAEF,MAAO,MAAM,CAAAJ,kBAAkB,CAAGjB,gBAAgB,CAChD,kCAAkC,CAClC,KAAO,CAAAsB,IAAY,EAAK,CACtB,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAArB,cAAc,CAACsB,OAAO,CAACF,IAAI,CAAC,CACnD,MAAO,CAAAC,QAAQ,CACjB,CACF,CAAC,CAED,MAAO,MAAM,CAAEb,UAAW,CAAC,CAAGH,kBAAkB,CAACkB,OAAO,CAExD,KAAM,CAAAC,oBAAoB,CAAGnB,kBAAkB,CAACoB,OAAO,CAEvD,cAAe,CAAAD,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}