{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport weatherHistoryService from '../services/weatherHistoryService';\nconst initialState = [];\nexport const weatherHistorySlice = createSlice({\n  name: 'weatherHistory',\n  initialState,\n  reducers: {\n    setHistory: (state, action) => {\n      const history = action.payload;\n      state = history.reverse();\n      return state;\n    },\n    addHistory: (state, action) => {\n      const city = action.payload;\n      state.push(city);\n    },\n    removeHistory: state => {\n      state.pop();\n      return state;\n    }\n  }\n});\nexport const fetchWeatherHistory = () => {\n  return async dispatch => {\n    const weatherHistory = await weatherHistoryService.getAll();\n    dispatch(setHistory(weatherHistory));\n  };\n};\nexport const addWeatherHistory = city => {\n  return async dispatch => {\n    const newCity = await weatherHistoryService.create(city);\n    dispatch(addHistory(newCity));\n  };\n};\nexport const {\n  setHistory,\n  addHistory,\n  removeHistory\n} = weatherHistorySlice.actions;\nconst weatherHistoryReducer = weatherHistorySlice.reducer;\nexport default weatherHistoryReducer;","map":{"version":3,"names":["createSlice","weatherHistoryService","initialState","weatherHistorySlice","name","reducers","setHistory","state","action","history","payload","reverse","addHistory","city","push","removeHistory","pop","fetchWeatherHistory","dispatch","weatherHistory","getAll","addWeatherHistory","newCity","create","actions","weatherHistoryReducer","reducer"],"sources":["/home/eartto/weatherapp/weatherapp_frontend/src/reducers/weatherHistoryReducer.ts"],"sourcesContent":["import { createSlice, Dispatch } from '@reduxjs/toolkit'\nimport weatherHistoryService from '../services/weatherHistoryService'\nimport { weatherHistory } from '../@types/weatherHistory'\n\nconst initialState = [] as weatherHistory[]\n\nexport const weatherHistorySlice = createSlice({\n    name: 'weatherHistory',\n    initialState,\n    reducers: {\n        setHistory: (state, action) => {\n            const history = action.payload\n            state = history.reverse()\n            return state\n        },\n        addHistory: (state, action) => {\n            const city = action.payload\n            state.push(city)\n        },\n        removeHistory: (state) => {\n            state.pop()\n            return state\n        }\n    }\n})\n\nexport const fetchWeatherHistory = () => {\n    return async (dispatch: Dispatch) => {\n        const weatherHistory = await weatherHistoryService.getAll();\n        dispatch(setHistory(weatherHistory))\n    }\n}\n\nexport const addWeatherHistory = (city: string) => {\n    return async (dispatch: Dispatch) => {\n        const newCity = await weatherHistoryService.create(city)\n        dispatch(addHistory(newCity))\n    }\n}\n\nexport const { setHistory, addHistory, removeHistory } = weatherHistorySlice.actions\n\nconst weatherHistoryReducer = weatherHistorySlice.reducer\n\nexport default weatherHistoryReducer"],"mappings":"AAAA,SAASA,WAAW,QAAkB,kBAAkB;AACxD,OAAOC,qBAAqB,MAAM,mCAAmC;AAGrE,MAAMC,YAAY,GAAG,EAAsB;AAE3C,OAAO,MAAMC,mBAAmB,GAAGH,WAAW,CAAC;EAC3CI,IAAI,EAAE,gBAAgB;EACtBF,YAAY;EACZG,QAAQ,EAAE;IACNC,UAAU,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC3B,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9BH,KAAK,GAAGE,OAAO,CAACE,OAAO,CAAC,CAAC;MACzB,OAAOJ,KAAK;IAChB,CAAC;IACDK,UAAU,EAAEA,CAACL,KAAK,EAAEC,MAAM,KAAK;MAC3B,MAAMK,IAAI,GAAGL,MAAM,CAACE,OAAO;MAC3BH,KAAK,CAACO,IAAI,CAACD,IAAI,CAAC;IACpB,CAAC;IACDE,aAAa,EAAGR,KAAK,IAAK;MACtBA,KAAK,CAACS,GAAG,CAAC,CAAC;MACX,OAAOT,KAAK;IAChB;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMU,mBAAmB,GAAGA,CAAA,KAAM;EACrC,OAAO,MAAOC,QAAkB,IAAK;IACjC,MAAMC,cAAc,GAAG,MAAMlB,qBAAqB,CAACmB,MAAM,CAAC,CAAC;IAC3DF,QAAQ,CAACZ,UAAU,CAACa,cAAc,CAAC,CAAC;EACxC,CAAC;AACL,CAAC;AAED,OAAO,MAAME,iBAAiB,GAAIR,IAAY,IAAK;EAC/C,OAAO,MAAOK,QAAkB,IAAK;IACjC,MAAMI,OAAO,GAAG,MAAMrB,qBAAqB,CAACsB,MAAM,CAACV,IAAI,CAAC;IACxDK,QAAQ,CAACN,UAAU,CAACU,OAAO,CAAC,CAAC;EACjC,CAAC;AACL,CAAC;AAED,OAAO,MAAM;EAAEhB,UAAU;EAAEM,UAAU;EAAEG;AAAc,CAAC,GAAGZ,mBAAmB,CAACqB,OAAO;AAEpF,MAAMC,qBAAqB,GAAGtB,mBAAmB,CAACuB,OAAO;AAEzD,eAAeD,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}