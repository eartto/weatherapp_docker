{"ast":null,"code":"import React,{useState}from'react';import{useAppDispatch}from'../store';import{fetchWeatherReport}from'../reducers/weatherReportReducer';import{addWeatherHistory}from'../reducers/weatherHistoryReducer';import{setNotification}from'../reducers/notificationReducer';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CitySearchBox=()=>{const dispatch=useAppDispatch();const[search,setSearch]=useState('');const handleSearchChange=event=>{setSearch(event.target.value);};const getWeather=async()=>{const response=await dispatch(fetchWeatherReport(search));if(response.payload!==undefined){const cityName=response.payload.name;dispatch(addWeatherHistory(cityName));setSearch('');}else{dispatch(setNotification('No city found with that name'));}};return/*#__PURE__*/_jsxs(\"div\",{className:\"Find-city\",children:[\"City: \",/*#__PURE__*/_jsx(\"input\",{name:\"search\",value:search,onChange:handleSearchChange}),' ',/*#__PURE__*/_jsx(\"button\",{onClick:()=>getWeather(),children:\"show weather\"})]});};export default CitySearchBox;","map":{"version":3,"names":["React","useState","useAppDispatch","fetchWeatherReport","addWeatherHistory","setNotification","jsx","_jsx","jsxs","_jsxs","CitySearchBox","dispatch","search","setSearch","handleSearchChange","event","target","value","getWeather","response","payload","undefined","cityName","name","className","children","onChange","onClick"],"sources":["/home/eartto/weatherapp/weatherapp_frontend/src/components/CitySearchBox.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useAppDispatch } from '../store';\nimport { fetchWeatherReport } from '../reducers/weatherReportReducer';\nimport { addWeatherHistory } from '../reducers/weatherHistoryReducer';\nimport { setNotification } from '../reducers/notificationReducer';\n\nconst CitySearchBox = () => {\n  const dispatch = useAppDispatch();\n  const [search, setSearch] = useState('');\n\n  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(event.target.value);\n  };\n\n  const getWeather = async () => {\n    const response = await dispatch(fetchWeatherReport(search));\n    if (response.payload !== undefined) {\n      const cityName = response.payload.name;\n      dispatch(addWeatherHistory(cityName));\n      setSearch('');\n    } else {\n      dispatch(setNotification('No city found with that name'));\n    }\n  };\n\n  return (\n    <div className=\"Find-city\">\n      City: <input name=\"search\" value={search} onChange={handleSearchChange} />{' '}\n      <button onClick={() => getWeather()}>show weather</button>\n    </div>\n  );\n};\n\nexport default CitySearchBox;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,cAAc,KAAQ,UAAU,CACzC,OAASC,kBAAkB,KAAQ,kCAAkC,CACrE,OAASC,iBAAiB,KAAQ,mCAAmC,CACrE,OAASC,eAAe,KAAQ,iCAAiC,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAElE,KAAM,CAAAC,aAAa,CAAGA,CAAA,GAAM,CAC1B,KAAM,CAAAC,QAAQ,CAAGT,cAAc,CAAC,CAAC,CACjC,KAAM,CAACU,MAAM,CAAEC,SAAS,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAExC,KAAM,CAAAa,kBAAkB,CAAIC,KAA0C,EAAK,CACzEF,SAAS,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAC/B,CAAC,CAED,KAAM,CAAAC,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAR,QAAQ,CAACR,kBAAkB,CAACS,MAAM,CAAC,CAAC,CAC3D,GAAIO,QAAQ,CAACC,OAAO,GAAKC,SAAS,CAAE,CAClC,KAAM,CAAAC,QAAQ,CAAGH,QAAQ,CAACC,OAAO,CAACG,IAAI,CACtCZ,QAAQ,CAACP,iBAAiB,CAACkB,QAAQ,CAAC,CAAC,CACrCT,SAAS,CAAC,EAAE,CAAC,CACf,CAAC,IAAM,CACLF,QAAQ,CAACN,eAAe,CAAC,8BAA8B,CAAC,CAAC,CAC3D,CACF,CAAC,CAED,mBACEI,KAAA,QAAKe,SAAS,CAAC,WAAW,CAAAC,QAAA,EAAC,QACnB,cAAAlB,IAAA,UAAOgB,IAAI,CAAC,QAAQ,CAACN,KAAK,CAAEL,MAAO,CAACc,QAAQ,CAAEZ,kBAAmB,CAAE,CAAC,CAAC,GAAG,cAC9EP,IAAA,WAAQoB,OAAO,CAAEA,CAAA,GAAMT,UAAU,CAAC,CAAE,CAAAO,QAAA,CAAC,cAAY,CAAQ,CAAC,EACvD,CAAC,CAEV,CAAC,CAED,cAAe,CAAAf,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}